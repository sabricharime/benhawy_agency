// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique 
  password String
  role Role
  post Post[]
  comments Comment[]
  replies Reply[]
  likes Like[]
  shares Share[]

}

enum Role{
  ADMIN
  HOST
  USER
  GUEST
}

model Post{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  title String @unique
  content String @unique 
  image String[]
  user User @relation(fields: [userID], references: [id] )
  userID Int 
  comment Comment[]
  likes Like[]
  shares Share[]


  
}

model Comment {
  id Int @id @default(autoincrement())
  content String
  createdAt DateTime @default(now())
  postId Int
  post Post @relation(fields: [postId] , references: [id])
  userId Int
  user User @relation(fields: [userId], references: [id])
  replies Reply[]
}

model Reply{
  id Int @id @default(autoincrement())
  content String
  createdAt DateTime @default(now())
  commentID Int
  comment Comment @relation(fields: [commentID], references: [id])
  userID Int
  user User  @relation(fields: [userID], references: [id])
}
model Like {
  id Int @id @default(autoincrement())
  postId Int
  post Post @relation(fields: [postId] , references: [id])
  userId Int
  user User @relation(fields: [userId], references: [id])
}

model Share{
  id        Int       @id @default(autoincrement())
  postId    Int
  post      Post      @relation(fields: [postId], references: [id])
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
}